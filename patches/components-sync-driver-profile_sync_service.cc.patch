diff --git a/components/sync/driver/profile_sync_service.cc b/components/sync/driver/profile_sync_service.cc
index f3956a3fcd7cbcfe74d81be242b2877075a9b189..a5bc7e9864f06f68d9ef71dd3aaa1def8c844c6b 100644
--- a/components/sync/driver/profile_sync_service.cc
+++ b/components/sync/driver/profile_sync_service.cc
@@ -193,6 +193,8 @@ ProfileSyncService::ProfileSyncService(InitParams init_params)
   DCHECK(sync_client_);
   DCHECK(IsLocalSyncEnabled() || identity_manager_ != nullptr);
 
+  BRAVE_PROFILE_SYNC_SERVICE
+
   // If Sync is disabled via command line flag, then ProfileSyncService
   // shouldn't be instantiated.
   DCHECK(switches::IsSyncAllowedByFlag());
@@ -536,6 +538,7 @@ void ProfileSyncService::StartUpSlowEngineComponents() {
   params.report_unrecoverable_error_function =
       base::BindRepeating(ReportUnrecoverableError, channel_);
   sync_prefs_.GetInvalidationVersions(&params.invalidation_versions);
+  BRAVE_SET_POLL_INTERVAL
   params.poll_interval = sync_prefs_.GetPollInterval();
   if (params.poll_interval.is_zero()) {
     params.poll_interval =
@@ -543,6 +546,7 @@ void ProfileSyncService::StartUpSlowEngineComponents() {
   }
 
   if (!IsLocalSyncEnabled()) {
+    BRAVE_START_UP_SLOW_ENGINE_COMPONENTS
     auth_manager_->ConnectionOpened();
   }
 
@@ -940,6 +944,7 @@ void ProfileSyncService::OnEngineInitialized(
     }
   }
 
+  BRAVE_ON_ENGINE_INITIALIZED
   NotifyObservers();
 }
 
@@ -1214,6 +1219,7 @@ void ProfileSyncService::TriggerRefresh(const ModelTypeSet& types) {
 }
 
 bool ProfileSyncService::IsSignedIn() const {
+  BRAVE_IS_SIGNED_IN
   // Sync is logged in if there is a non-empty account id.
   return !GetAuthenticatedAccountInfo().account_id.empty();
 }
@@ -1517,6 +1523,7 @@ void ProfileSyncService::OnSyncManagedPrefChange(bool is_sync_managed) {
 
 void ProfileSyncService::OnFirstSetupCompletePrefChange(
     bool is_first_setup_complete) {
+  BRAVE_ON_FIRST_SETUP_COMPLETE_PREF_CHANGE
   if (engine_ && engine_->IsInitialized()) {
     ReconfigureDatatypeManager(/*bypass_setup_in_progress_check=*/false);
   }
